// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210919125420_MovieListtMigraion")]
    partial class MovieListtMigraion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("Domain.Listt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("listGenre")
                        .HasColumnType("TEXT");

                    b.Property<string>("listTitle")
                        .HasColumnType("TEXT");

                    b.Property<string>("listType")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Lists");
                });

            modelBuilder.Entity("Domain.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("desc")
                        .HasColumnType("TEXT");

                    b.Property<string>("genre")
                        .HasColumnType("TEXT");

                    b.Property<string>("img")
                        .HasColumnType("TEXT");

                    b.Property<string>("imgSm")
                        .HasColumnType("TEXT");

                    b.Property<string>("imgTitle")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isSeries")
                        .HasColumnType("INTEGER");

                    b.Property<int>("limit")
                        .HasColumnType("INTEGER");

                    b.Property<string>("title")
                        .HasColumnType("TEXT");

                    b.Property<string>("trailer")
                        .HasColumnType("TEXT");

                    b.Property<string>("video")
                        .HasColumnType("TEXT");

                    b.Property<string>("year")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("Domain.MovieListt", b =>
                {
                    b.Property<Guid>("MovieId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ListtId")
                        .HasColumnType("TEXT");

                    b.HasKey("MovieId", "ListtId");

                    b.HasIndex("ListtId");

                    b.ToTable("movieListts");
                });

            modelBuilder.Entity("Domain.MovieListt", b =>
                {
                    b.HasOne("Domain.Listt", "Listt")
                        .WithMany("content")
                        .HasForeignKey("ListtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Movie", "Movie")
                        .WithMany("movielists")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Listt");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Domain.Listt", b =>
                {
                    b.Navigation("content");
                });

            modelBuilder.Entity("Domain.Movie", b =>
                {
                    b.Navigation("movielists");
                });
#pragma warning restore 612, 618
        }
    }
}
